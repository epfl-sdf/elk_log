input {
  elasticsearch {
    hosts => "http://sdf-elk-dev:9200"
    index => "*distrib.170815.1444"
    query => '{"query": {
                  "term": {
                      "calculated": 0}}}'	       
                 }
      }
filter{

#ruby{
#    code => "event['finished'] = (event['@timestamp'])" 
#      }

if [zstatus] != "STARTED"{
  elasticsearch
       {
    hosts => "10.92.104.210:9200"
    index => "*distrib.170815.1444"
#   query_template =>  "/home/ubuntu/elk_hello_world/distrib_100_csv_youssef_elasticsearchtemp.json"
    query => "website_id:%{website_id} AND first_name:%{first_name} AND zstatus:STARTED AND last_name:%{last_name} AND browser_name:%{browser_name}"
    fields => { "zdate"  => "started"}
       }
  date {
    match => ["started", "yyyy-MM-dd_HH:mm:ss"]
    target => "[started]"
       }
  ruby{
    code => "event['duration'] = (event['@timestamp'] - event['started'])/60; event['calculated'] = 1" 
      }
                         }

# (zstatus:EMPTY OR zstatus:DONE OR zstatus:CONNECTONERROR) AND

else{

 elasticsearch
    {
    hosts => "http://sdf-elk-dev:9200"
    index => "*distrib.170815.1444"
    query => "website_id:%{website_id} AND first_name:%{first_name} AND !(zstatus:STARTED) AND last_name:%{last_name} AND browser_name:%{browser_name}"
    fields => { "zdate"  => "finished"
                "zstatus" => "final_status"}
       }
   date{
    match => ["finished", "yyyy-MM-dd_HH:mm:ss"]
    target => "[finished]"
       }
   ruby{
    code => "event['duration'] = (event['finished'] - event['@timestamp'])/60 ; event['calculated'] = 1" 
      }
    }
if [duration] > 60 or ([duration] < 1 and [zstatus] == "DONE"){
   ruby{
    code => "event['fake'] = 1; event['duration_real'] = 10.0"
       }
    }
else{
  ruby{
    code => "event['fake'] = 0; event['duration_real'] = event['duration']"
      }
    }
}

output {
  elasticsearch {
    index => "distrib.170815.1444"
    document_type => "dns"
    hosts => "http://10.92.104.210:9200"
    action => "update"
    doc_as_upsert => true
    document_id => "%{zdate} %{first_name} %{zstatus}"
  }
  stdout {
    codec => json
  }
}

